<?xml version="1.0" encoding="UTF-8"?>
<!-- 30초마다  설정 파일의 변경을 확인한다. 파일이 변경되면 다시 로딩한다. -->
<configuration scan="true" scanPeriod="30 seconds">

	<!-- 외부 설정파일을 사용할 수 있다. -->
	<!-- <property resource="resource.properties"/> -->
	
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %magenta(%-4relative) --- [ %thread{10} ] %cyan(%logger{20}) : %msg%n </pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${APP_HOME}/sujemall-webapp.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        	<!-- 파일이 하루에 한개씩 생성된다. -->
            <fileNamePattern>sujemall-webapp.%d{yyyy-MM-dd}.log</fileNamePattern>
            
            <!-- 30일이 지난 파일은 삭제 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-4relative --- [ %thread{10} ] %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>


    <!-- Transaction Start, End Trace Logging (must be debug level) -->
    <logger name="org.springframework" level="info"/>
    <logger name="kr.co.acomp.hello" level="debug"/>
    <logger name="sample" level="info"/>
    <logger name="org.springframework.jdbc.datasource.DataSourceTransactionManager" level="debug"/>
    <logger name="org.hibernate" level="info"/>

    <root level="debug">
    	<!-- Console에 로그를 출력하고자 할 때 사용 -->
        <appender-ref ref="CONSOLE"/>
        
        <!-- File로 로그를 남기고자 할 때 사용 -->
        <!-- <appender-ref ref="FILE"/>  -->
    </root>

</configuration>