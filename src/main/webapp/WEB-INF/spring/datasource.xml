<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DB Property Placeholder Setting -->
	<context:property-placeholder location="classpath:database.properties"/>

	<!-- DataSource Bean -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${db.driverClass}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:mappers/*.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- <bean id="dataSource2" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"> 
		<property name="driverClass" value="com.mysql.jdbc.Driver"/> 
		<property name="url" value="jdbc:mysql://localhost:3306/spring"/>
		<property name="username" value="spring"/> 
		<property name="password" value="spring"/>
	</bean> -->

	
	
	<!-- Way1. implement Transaction by Annotation -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/> -->
	
	
	<!-- Way2. implement Transaction by AOP -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
			<!-- <tx:method name="*" isolation="READ_COMMITTED"/> -->
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* kr.co.acomp.hello.service.*Service.*(..))" id="transactionPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
	</aop:config>



	<!-- Spring Transaction Setting -->
	<!-- 1. TransactionManager Bean -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 2. TransactionAdvice Setting -->
	<tx:advice id="txAdvice2" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*"/>
			<tx:method name="update*"
					   propagation="REQUIRED"	isolation="READ_COMMITTED"
					   timeout="10"
					   read-only="false"
					   rollback-for="sample.service.exception.BusinessException"/>
			<tx:method name="insert*"
					   propagation="REQUIRED"	isolation="READ_COMMITTED"
					   timeout="10"
					   read-only="false"
					   rollback-for="sample.service.exception.BusinessException"/>
		</tx:attributes>
	</tx:advice>

	<!-- 3. TransactionAdvice AOP Setting -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* sample.service.*Service.*(..))"/>
		<!-- <aop:advisor advice-ref="txAdvice" pointcut="@target(org.springframework.stereotype.Service)"/> -->
	</aop:config>
	
	
</beans>
